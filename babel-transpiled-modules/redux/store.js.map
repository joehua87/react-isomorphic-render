{"version":3,"sources":["../../source/redux/store.js"],"names":[],"mappings":"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","file":"store.js","sourcesContent":["import { createStore, combineReducers, applyMiddleware, compose } from 'redux'\n\nimport asynchronous_middleware from './asynchronous middleware'\nimport transition_middleware from './transition middleware'\n\nimport dev_tools from './dev tools'\n\nimport http_client from '../http client'\n\nimport { routerStateReducer } from 'redux-router'\n\nimport { createRoutes } from 'react-router/lib/RouteUtils'\n\nimport { reduxReactRouter as reduxReactRouter_client } from 'redux-router'\nimport { reduxReactRouter as reduxReactRouter_server } from 'redux-router/server'\n\nimport createHistory_server from 'history/lib/createMemoryHistory'\nimport createHistory_client from 'history/lib/createBrowserHistory'\n\n// Three different types of scroll behavior available.\n// Documented at https://github.com/rackt/scroll-behavior\n//\n// Possibly currently doesn't make any difference\nimport use_scroll from 'scroll-behavior/lib/useStandardScroll'\n\n// @stevoland wrote this for `react-redux-universal-hot-example`.\n// I'm not sure if it's needed anymore.\n//\n// Wrap the hooks so they don't fire if they're called before\n// the store is initialised. This only happens when doing the first\n// client render of a route that has an onEnter hook\nfunction makeHooksSafe(routes, store)\n{\n\tif (Array.isArray(routes))\n\t{\n\t\treturn routes.map((route) => makeHooksSafe(route, store))\n\t}\n\n\tconst onEnter = routes.onEnter\n\n\tif (onEnter)\n\t{\n\t\troutes.onEnter = function safeOnEnter(...args)\n\t\t{\n\t\t\ttry\n\t\t\t{\n\t\t\t\tstore.getState()\n\t\t\t}\n\t\t\tcatch (err)\n\t\t\t{\n\t\t\t\tif (onEnter.length === 3)\n\t\t\t\t{\n\t\t\t\t\targs[2]()\n\t\t\t\t}\n\n\t\t\t\t// There's no store yet so ignore the hook\n\t\t\t\treturn\n\t\t\t}\n\n\t\t\tonEnter.apply(null, args)\n\t\t}\n\t}\n\n\tif (routes.childRoutes)\n\t{\n\t\tmakeHooksSafe(routes.childRoutes, store)\n\t}\n\n\tif (routes.indexRoute)\n\t{\n\t\tmakeHooksSafe(routes.indexRoute, store)\n\t}\n\n\treturn routes\n}\n\n// @stevoland wrote this for `react-redux-universal-hot-example`.\n// I'm not sure if it's needed anymore.\nfunction makeRouteHooksSafe(create_routes)\n{\n\treturn store => makeHooksSafe(createRoutes(create_routes(store)), store)\n}\n\nexport default function(get_reducers, { development, development_tools, server, data, create_routes, http_request, host, port }) \n{\n\t// whether to return a `reload()` function to hot reload store\n\tlet reloadable = true\n\n\t// allows simplified store creation \n\t// (with reducer object instead of a function returning reducer object)\n\tif (typeof get_reducers !== 'function')\n\t{\n\t\t// generate proper `get_reducers` function\n\t\tconst reducers = get_reducers\n\t\tget_reducers = () => reducers\n\n\t\t// no way to reload store in this case\n\t\t// (or if there is the open an issue on github)\n\t\treloadable = false\n\t}\n\n\t// server-side and client-side specifics\n\tcreate_routes          = server ? create_routes : makeRouteHooksSafe(create_routes)\n\tconst reduxReactRouter = server ? reduxReactRouter_server : reduxReactRouter_client\n\tconst createHistory    = server ? createHistory_server : use_scroll(createHistory_client)\n\n\t// Redux middleware\n\tconst middleware = [asynchronous_middleware(new http_client({ host, port, clone_request: http_request })), transition_middleware(server)]\n\t\n\t// Store creation function\n\tlet create_store\n\n\t// Generate store creation function\n\tif (development && !server && development_tools)\n\t{\n\t\tconst { persistState } = require('redux-devtools')\n\n\t\tcreate_store = compose\n\t\t(\n\t\t\tapplyMiddleware(...middleware),\n\t\t\t// Provides support for DevTools:\n\t\t\tdev_tools.instrument(),\n\t\t\t// Lets you write ?debug_session=<name> in address bar to persist debug sessions\n\t\t\tpersistState(window.location.href.match(/[?&]debug_session=([^&]+)\\b/))\n\t\t)\n\t\t(createStore)\n\t} \n\telse\n\t{\n\t\tcreate_store = applyMiddleware(...middleware)(createStore)\n\t}\n\n\t// keeps react-router state in Redux\n\tcreate_store = reduxReactRouter({ getRoutes: create_routes, createHistory })(create_store)\n\n\t// adds redux-router reducers to the list of all reducers\n\tconst overall_reducer = () =>\n\t{\n\t\tconst model = get_reducers()\n\t\tmodel.router = routerStateReducer\n\t\treturn combineReducers(model)\n\t}\n\n\t// create store\n\tconst store = create_store(overall_reducer(), data)\n\t\n\t// // client side hot module reload for Redux reducers attempt\n\t// // (won't work because it's not an immediate parent module for the reducers)\n\t// // https://github.com/webpack/webpack/issues/1790\n\t// if (development && module.hot)\n\t// {\n\t// \tmodule.hot.accept(reducers_path, () =>\n\t// \t{\n\t// \t\tstore.replaceReducer(overall_reducer())\n\t// \t})\n\t// }\n\n\tif (!reloadable)\n\t{\n\t\treturn store\n\t}\n\n\treturn { store, reload: () => store.replaceReducer(overall_reducer()) }\n}\n"]}