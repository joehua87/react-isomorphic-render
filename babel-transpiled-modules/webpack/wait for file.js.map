{"version":3,"sources":["../../source/webpack/wait for file.js"],"names":[],"mappings":";;;;;;kBAAe,IAAI;;;;;;;;;;;;qBASJ,UAAS,IAAI,EAAE,IAAI,EAClC;;AAEC,KAAM,cAAc,GAAG,GAAG,CAAA;AAC1B,KAAM,gBAAgB,GAAG,IAAI,CAAA;;;AAG7B,KAAI,aAAa,GAAG,CAAC,CAAA;;;AAGrB,UAAS,QAAQ,CAAC,SAAS,EAAE,OAAO,EACpC;AACC,WAAS,KAAK,GACd;;AAEC,OAAI,SAAS,EAAE,EACf;AACC,WAAO,OAAO,EAAE,CAAA;IAChB;;AAED,gBAAa,IAAI,cAAc,CAAA;;AAE/B,OAAI,aAAa,IAAI,gBAAgB,EACrC;AACC,iBAAa,GAAG,CAAC,CAAA;;AAEjB,WAAO,CAAC,GAAG,QAAM,IAAI,kBAAe,CAAA;AACpC,WAAO,CAAC,GAAG,CAAC,iDAAiD,CAAC,CAAA;IAC9D;;AAED,aAAU,CAAC,KAAK,EAAE,cAAc,CAAC,CAAA;GACjC;;AAED,OAAK,EAAE,CAAA;EACP;;;AAGD,SAAQ,CAAC;SAAM,gBAAG,UAAU,CAAC,IAAI,CAAC;EAAA,EAAE,IAAI,CAAC,CAAA;CACzC","file":"wait for file.js","sourcesContent":["import fs from 'fs'\n\n// Waits for `assets/webpage_rendering_server.js` to be created \n// after Webpack build process finishes\n//\n// The callback is called when `assets/webpage_rendering_server.js` has been found \n// (it's needed for development because `webpack-dev-server` \n//  and your application server are run in parallel).\n//\nexport default function(path, done)\n{\n\t// condition check interval\n\tconst check_interval = 300 // in milliseconds\n\tconst message_interval = 2000 // in milliseconds\n\n\t// show the message not too often\n\tlet message_timer = 0\n\n\t// waits for condition to be met, then proceeds\n\tfunction wait_for(condition, proceed)\n\t{\n\t\tfunction check()\n\t\t{\n\t\t\t// if the condition is met, then proceed\n\t\t\tif (condition())\n\t\t\t{\n\t\t\t\treturn proceed()\n\t\t\t}\n\n\t\t\tmessage_timer += check_interval\n\n\t\t\tif (message_timer >= message_interval)\n\t\t\t{\n\t\t\t\tmessage_timer = 0\n\n\t\t\t\tconsole.log(`(\"${path}\" not found)`)\n\t\t\t\tconsole.log('(waiting for the first Webpack build to finish)')\n\t\t\t}\n\n\t\t\tsetTimeout(check, check_interval)\n\t\t}\n\n\t\tcheck()\n\t}\n\n\t// wait for webpack-assets.json to be written to disk by Webpack\n\twait_for(() => fs.existsSync(path), done)\n}"]}