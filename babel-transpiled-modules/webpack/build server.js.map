{"version":3,"sources":["../../source/webpack/build server.js"],"names":[],"mappings":";;;;;;uBAAsB,YAAY;;oBACZ,MAAM;;;;uBAER,SAAS;;;;qBAEd,UAAS,kBAAkB,EAC1C;KAD4C,OAAO,yDAAG,EAAE;KAE/C,WAAW,GAA8D,OAAO,CAAhF,WAAW;KAAE,iBAAiB,GAA2C,OAAO,CAAnE,iBAAiB;KAAE,UAAU,GAA+B,OAAO,CAAhD,UAAU;KAAE,wBAAwB,GAAK,OAAO,CAApC,wBAAwB;;AAE5E,KAAM,aAAa,GAAG,eAAM,kBAAkB,CAAC,CAAA;;;;;AAK/C,cAAa,CAAC,OAAO,GAAG,YAAY,CAAA;;;;;AAKpC,cAAa,CAAC,MAAM,GAAG,MAAM,CAAA;;AAE7B,cAAa,CAAC,KAAK,GAAG,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,CAAA;;AAE5E,cAAa,CAAC,MAAM,CAAC,aAAa,GAAG,WAAW,CAAA;;;;AAIhD,KAAI,UAAU,EACd;AACC,eAAa,CAAC,MAAM,CAAC,UAAU,GAAG,UAAU,CAAA;EAC5C;;;AAGD,cAAa,CAAC,MAAM,CAAC,QAAQ,GAAG,WAAW,CAAA;AAC3C,cAAa,CAAC,MAAM,CAAC,aAAa,GAAG,WAAW,CAAA;;;;;AAKhD,cAAa,CAAC,MAAM,CAAC,QAAQ,GAAG,IAAI,CAAA;;;AAGpC,cAAa,CAAC,aAAa,GAC3B;AACC,MAAI,EAAI,kBAAK,IAAI,CAAC,aAAa,CAAC,OAAO,EAAE,cAAc,CAAC;AACxD,OAAK,EACL;AACC,iBAAc,EAAU,yBAAyB;AACjD,wBAAqB,EAAG,gCAAgC;GACxD;EACD,CAAA;;;;;;;AAOD,cAAa,CAAC,SAAS,GAAG,CAAC,kBAAkB,CAAC,CAAA;;AAE9C,KAAM,mBAAmB,GAAG,kBAAK,OAAO,CAAC,aAAa,CAAC,MAAM,CAAC,IAAI,EAAE,qBAAqB,CAAC,CAAA;;;AAG1F,cAAa,CAAC,OAAO,GAAG,aAAa,CAAC,OAAO,CAAC,MAAM;;AAGnD,KAAI,qBAAQ,YAAY,CACvB;AACA,eAAa,EACb;;AAEC,WAAQ,EAAE,IAAI,CAAC,SAAS,CAAC,WAAW,GAAG,aAAa,GAAG,YAAY,CAAC;GACpE;;AAED,UAAQ,EAAc,KAAK;AAC3B,UAAQ,EAAc,IAAI;;AAE1B,eAAa,EAAS,WAAW;AACjC,cAAY,EAAU,CAAC,WAAW;;AAElC,qBAAmB,EAAG,iBAAiB;;AAEvC,uBAAqB,EAAE,IAAI,CAAC,SAAS,CAAC,mBAAmB,CAAC;EAC1D,CAAC;;;;;;;;AAQF,KAAI,qBAAQ,QAAQ,CAAC,YAAY,EAAE;;;;;AAKnC,KAAI,qBAAQ,QAAQ,CAAC,oBAAoB,EAAE;;;AAG3C,KAAI,qBAAQ,QAAQ,CAAC,qBAAqB,CAAC,EAAE,SAAS,EAAE,CAAC,EAAE,CAAC,CAC5D,CAAA;;;AAGD,KAAM,WAAW,GAAG,aAAa,CAAC,MAAM,CAAC,OAAO,CAAC,MAAM,CAAC,UAAA,MAAM,EAC9D;AACC,SAAO,MAAM,CAAC,IAAI,CAAC,QAAQ,EAAE,KAAK,aAAa,CAAC,mBAAmB,CAAC,MAAM,CAAC,QAAQ,EAAE,CAAA;EACrF,CAAC,CACD,KAAK,EAAE,CAAA;;;AAGR,YAAW,CAAC,OAAO,CAAC,KAAK,EAAE,CAAA;;;;;;;;;;;;;;;AAe3B,QAAO,aAAa,CAAA;CACpB","file":"build server.js","sourcesContent":["import { clone } from '../helpers'\nimport path      from 'path'\n\nimport webpack from 'webpack'\n\nexport default function(base_configuration, options = {})\n{\n\tconst { development, development_tools, publicPath, webpage_rendering_server } = options\n\n\tconst configuration = clone(base_configuration)\n\n\t// const output_path = path.resolve(configuration.output.path, '../server')\n\n\t// https://webpack.github.io/docs/configuration.html#devtool\n\tconfiguration.devtool = 'source-map'\n\t// configuration.devtool = 'inline-source-map'\n\t// configuration.devtool = 'eval-source-map'\n\t// configuration.devtool = 'eval-cheap-module-source-map'\n\n\tconfiguration.target = 'node'\n\n\tconfiguration.entry = { webpage_rendering_server: webpage_rendering_server }\n\n\tconfiguration.output.libraryTarget = 'commonjs2'\n\n\t// configuration.output.path = output_path\n\n\tif (publicPath)\n\t{\n\t\tconfiguration.output.publicPath = publicPath\n\t}\n\n\t// no need for browser cache management, so disable hashes in filenames\n\tconfiguration.output.filename = '[name].js'\n\tconfiguration.output.chunkFilename = '[name].js'\n\n\t// Include comments with information about the modules.\n\t// require(/* ./test */23).\n\t// What for is it here? I don't know. It's a copy & paste from the Webpack author's code.\n\tconfiguration.output.pathinfo = true\n\n\t// What for is it here? I don't know. It's a copy & paste from the Webpack author's code.\n\tconfiguration.resolveLoader =\n\t{\n\t\troot  : path.join(configuration.context, 'node_modules'),\n\t\talias : \n\t\t{\n\t\t\t\"react-proxy$\"        : \"react-proxy/unavailable\",\n\t\t\t\"react-proxy-loader$\" : \"react-proxy-loader/unavailable\"\n\t\t}\n\t}\n\n\t// `externals` allows you to specify dependencies for your library \n\t// that are not resolved by webpack, but become dependencies of the output. \n\t// This means they are imported from the environment during runtime.\n\t//\n\t// So that Webpack doesn't bundle \"node_modules\" into main.js.\n\tconfiguration.externals = [/^[a-z\\/\\-0-9]+$/i]\n\n\tconst webpack_assets_path = path.resolve(configuration.output.path, 'webpack-assets.json')\n\t// const webpack_assets_path = path.resolve(output_path, 'webpack-assets.json')\n\n\tconfiguration.plugins = configuration.plugins.concat\n\t(\n\t\t// environment variables\n\t\tnew webpack.DefinePlugin\n\t\t({\n\t\t\t'process.env':\n\t\t\t{\n\t\t\t\t// Useful to reduce the size of client-side libraries, e.g. react\n\t\t\t\tNODE_ENV: JSON.stringify(development ? 'development' : 'production') // 'development' to see non-minified React errors\n\t\t\t},\n\n\t\t\t_client_            : false,\n\t\t\t_server_            : true,\n\n\t\t\t_development_       : development,\n\t\t\t_production_        : !development,\n\n\t\t\t_development_tools_ : development_tools, // enable/disable Redux dev-tools\n\n\t\t\t_webpack_assets_path_: JSON.stringify(webpack_assets_path)\n\t\t}),\n\n\t\t// // PrefetchPlugin is said to prefetch the specified \".js\" files in the background.\n\t\t// // What for is it here? I don't know. It's a copy & paste from the Webpack author's code.\n\t\t// new webpack.PrefetchPlugin(\"react\"),\n\t\t// new webpack.PrefetchPlugin(\"react/lib/ReactComponentBrowserEnvironment\"),\n\n\t\t// omit duplicate modules\n\t\tnew webpack.optimize.DedupePlugin(),\n\n\t\t// Assign the module and chunk ids by occurrence count. \n\t\t// Ids that are used often get lower (shorter) ids. \n\t\t// This make ids predictable, reduces to total file size and is recommended.\n\t\tnew webpack.optimize.OccurenceOrderPlugin(),\n\n\t\t// put the resulting Webpack compiled code into a sigle javascript file\n\t\tnew webpack.optimize.LimitChunkCountPlugin({ maxChunks: 1 })\n\t)\n\n\t// find the styles loader\n\tconst scss_loader = configuration.module.loaders.filter(loader =>\n\t{\n\t\treturn loader.test.toString() === configuration.regular_expressions.styles.toString()\n\t})\n\t.first()\n\n\t// remove 'style-loader' from the list of loaders\n\tscss_loader.loaders.shift()\n\n\t// // What for is it here? I don't know. It's a copy & paste from the Webpack author's code.\n\t// scss_loader.loaders[0] = scss_loader.loaders[0].replace(/^css-loader/, 'css-loader/locals')\n\n\t// // What for is it here? I don't know. It's a copy & paste from the Webpack author's code.\n\t// devServer:\n\t// {\n\t// \tstats:\n\t// \t{\n\t// \t\tcached: false,\n\t// \t\texclude: exclude_from_stats\n\t// \t}\n\t// }\n\n\treturn configuration\n}"]}